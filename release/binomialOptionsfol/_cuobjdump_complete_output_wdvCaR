
Fatbin elf code:
================
arch = sm_10
code version = [1,2]
producer = cuda
host = linux
compile_size = 64bit
identifier = binomialOptions_SM10.cu

Fatbin ptx code:
================
arch = sm_10
code version = [1,4]
producer = cuda
host = linux
compile_size = 64bit
compressed
identifier = binomialOptions_SM10.cu
	.version 1.4
.target sm_10, map_f64_to_f32

	


	
	


	
	
	
	
	
	
	

.file	1	"<command-line>"
.file	2	"/tmp/tmpxft_0000646b_00000000-15_binomialOptions_SM10.compute_10.cudafe2.gpu"
.file	3	"binomialOptions_kernel.cuh"
.file	4	"/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stddef.h"
.file	5	"/home/paperspace/cudax/cuda/include/crt/device_runtime.h"
.file	6	"/home/paperspace/cudax/cuda/include/host_defines.h"
.file	7	"/home/paperspace/cudax/cuda/include/builtin_types.h"
.file	8	"/home/paperspace/cudax/cuda/include/device_types.h"
.file	9	"/home/paperspace/cudax/cuda/include/driver_types.h"
.file	10	"/home/paperspace/cudax/cuda/include/surface_types.h"
.file	11	"/home/paperspace/cudax/cuda/include/texture_types.h"
.file	12	"/home/paperspace/cudax/cuda/include/vector_types.h"
.file	13	"/home/paperspace/cudax/cuda/include/device_launch_parameters.h"
.file	14	"/home/paperspace/cudax/cuda/include/crt/storage_class.h"
.file	15	"realtype.h"
.file	16	"/home/paperspace/cudax/cuda/include/common_functions.h"
.file	17	"/home/paperspace/cudax/cuda/include/math_functions.h"
.file	18	"/home/paperspace/cudax/cuda/include/math_constants.h"
.file	19	"/home/paperspace/cudax/cuda/include/device_functions.h"
.file	20	"/home/paperspace/cudax/cuda/include/sm_11_atomic_functions.h"
.file	21	"/home/paperspace/cudax/cuda/include/sm_12_atomic_functions.h"
.file	22	"/home/paperspace/cudax/cuda/include/sm_13_double_functions.h"
.file	23	"/home/paperspace/cudax/cuda/include/sm_20_atomic_functions.h"
.file	24	"/home/paperspace/cudax/cuda/include/sm_32_atomic_functions.h"
.file	25	"/home/paperspace/cudax/cuda/include/sm_35_atomic_functions.h"
.file	26	"/home/paperspace/cudax/cuda/include/sm_20_intrinsics.h"
.file	27	"/home/paperspace/cudax/cuda/include/sm_30_intrinsics.h"
.file	28	"/home/paperspace/cudax/cuda/include/sm_32_intrinsics.h"
.file	29	"/home/paperspace/cudax/cuda/include/sm_35_intrinsics.h"
.file	30	"/home/paperspace/cudax/cuda/include/surface_functions.h"
.file	31	"/home/paperspace/cudax/cuda/include/texture_fetch_functions.h"
.file	32	"/home/paperspace/cudax/cuda/include/texture_indirect_functions.h"
.file	33	"/home/paperspace/cudax/cuda/include/surface_indirect_functions.h"
.file	34	"/home/paperspace/cudax/cuda/include/math_functions_dbl_ptx1.h"

.const .align 4 .b8 d_OptionData[20480];
.global .align 4 .b8 d_CallValue[4096];
.global .align 4 .b8 d_CallBuffer[8454144];

.entry _Z21binomialOptionsKernelv
{
.reg .u32 %r<42>;
.reg .u64 %rd<36>;
.reg .f32 %f<55>;
.reg .pred %p<15>;
.shared .align 4 .b8 __cuda___cuda_local_var_40992_34_non_const_callB8478720[1028];
.shared .align 4 .b8 __cuda___cuda_local_var_40991_34_non_const_callA8479748[1028];
.loc	3	70	0
$LDWbegin__Z21binomialOptionsKernelv:
.loc	3	79	0
cvt.u32.u16 %r1, %ctaid.x;
cvt.u64.u32 %rd1, %r1;
mov.u64 %rd2, d_OptionData;
mul.wide.u32 %rd3, %r1, 20;
add.u64 %rd4, %rd2, %rd3;
ld.const.f32 %f1, [%rd4+8];
.loc	3	80	0
ld.const.f32 %f2, [%rd4+12];
.loc	3	81	0
ld.const.f32 %f3, [%rd4+16];
.loc	3	84	0
cvt.s32.u16 %r2, %tid.x;
mov.s32 %r3, %r2;
mov.u32 %r4, 2048;
setp.gt.s32 %p1, %r2, %r4;
@%p1 bra $Lt_0_14338;
mov.u64 %rd5, d_CallBuffer;
mov.s32 %r5, 2304;
sub.s32 %r6, %r5, %r2;
shr.s32 %r7, %r6, 31;
mov.s32 %r8, 255;
and.b32 %r9, %r7, %r8;
add.s32 %r10, %r9, %r6;
shr.s32 %r11, %r10, 8;
mul.lo.u32 %r12, %r1, 2064;
cvt.s64.s32 %rd6, %r2;
cvt.u64.u32 %rd7, %r12;
mul.wide.s32 %rd8, %r2, 4;
mul.wide.u32 %rd9, %r12, 4;
ld.const.f32 %f4, [%rd4+4];
ld.const.f32 %f5, [%rd4+0];
add.s64 %rd10, %rd9, %rd8;
add.u64 %rd11, %rd5, %rd10;
mov.s32 %r13, %r11;
$Lt_0_9218:

	.loc	17	9180	0
cvt.rn.f32.s32 %f6, %r3;
add.f32 %f7, %f6, %f6;
mov.f32 %f8, 0fc5000000; 
	add.f32 %f9, %f7, %f8;
mul.f32 %f10, %f9, %f1;
mov.f32 %f11, 0f3fb8aa3b; 
	mul.f32 %f12, %f10, %f11;
cvt.rzi.f32.f32 %f13, %f12;
mov.f32 %f14, %f13;
mov.f32 %f15, 0fbf317200; 
	mov.f32 %f16, %f15;
mov.f32 %f17, %f10;
mad.f32 %f18, %f14, %f16, %f17;
mov.f32 %f19, %f18;
mov.f32 %f20, %f13;
mov.f32 %f21, 0fb5bfbe8e; 
	mov.f32 %f22, %f21;
mov.f32 %f23, %f19;
mad.f32 %f24, %f20, %f22, %f23;
mov.f32 %f25, %f24;
.loc	17	9209	0
mov.f32 %f26, 0f3fb8aa3b; 
	mul.f32 %f27, %f25, %f26;
mov.f32 %f28, %f27;
ex2.approx.ftz.f32 %f29,%f28;
mov.f32 %f30, %f29;
.loc	3	85	0
mov.f32 %f31, 0f7f800000; 
	mov.f32 %f32, 0f00000000; 
	ex2.approx.f32 %f33, %f13;
mul.f32 %f34, %f30, %f33;
mov.f32 %f35, 0fc2d20000; 
	setp.lt.f32 %p2, %f10, %f35;
selp.f32 %f36, %f32, %f34, %p2;
mov.f32 %f37, 0f42d20000; 
	setp.gt.f32 %p3, %f10, %f37;
selp.f32 %f38, %f31, %f36, %p3;
mul.f32 %f39, %f5, %f38;
sub.f32 %f40, %f39, %f4;
mov.f32 %f41, 0f00000000; 
	max.f32 %f42, %f40, %f41;
st.global.f32 [%rd11+0], %f42;
add.s32 %r3, %r3, 256;
add.u64 %rd11, %rd11, 1024;
mov.u32 %r14, 2048;
setp.le.s32 %p4, %r3, %r14;
@%p4 bra $Lt_0_9218;
bra.uni $Lt_0_8706;
$Lt_0_14338:
mul.lo.u32 %r15, %r1, 2064;
cvt.u64.u32 %rd12, %r15;
mul.wide.u32 %rd9, %r15, 4;
mov.u64 %rd5, d_CallBuffer;
$Lt_0_8706:
add.u64 %rd13, %rd9, %rd5;
mov.s32 %r16, 2048;
mov.u64 %rd14, __cuda___cuda_local_var_40992_34_non_const_callB8478720;
mov.u64 %rd15, __cuda___cuda_local_var_40991_34_non_const_callA8479748;
$Lt_0_10242:

	mov.u32 %r17, 0;
setp.le.s32 %p5, %r16, %r17;
@%p5 bra $Lt_0_10498;
add.s32 %r18, %r16, 223;
mov.s32 %r19, 613566757;
mov.s32 %r20, 0;
setp.lt.s32 %p6, %r18, %r20;
abs.s32 %r21, %r18;
mul.hi.u32 %r22, %r21, %r19;
sub.u32 %r23, %r21, %r22;
shr.u32 %r24, %r23, 1;
add.u32 %r25, %r24, %r22;
shr.s32 %r26, %r25, 7;
@%p6 sub.s32 %r26, %r20, %r26;
mov.s32 %r27, %r26;
mov.s32 %r28, 0;
mov.s32 %r29, %r27;
$Lt_0_11010:

	.loc	3	96	0
bar.sync 0;
sub.s32 %r30, %r16, %r28;
mov.s32 %r31, 255;
min.s32 %r32, %r30, %r31;
setp.lt.s32 %p7, %r32, %r2;
@%p7 bra $Lt_0_11266;
.loc	3	98	0
add.s32 %r33, %r2, %r28;
cvt.s64.s32 %rd16, %r33;
mul.wide.s32 %rd17, %r33, 4;
add.u64 %rd18, %rd13, %rd17;
ld.global.f32 %f43, [%rd18+0];
cvt.s64.s32 %rd19, %r2;
mul.wide.s32 %rd20, %r2, 4;
add.u64 %rd21, %rd15, %rd20;
st.shared.f32 [%rd21+0], %f43;
$Lt_0_11266:
.loc	3	101	0
sub.s32 %r34, %r32, 1;
mov.s32 %r35, %r34;
sub.s32 %r36, %r32, 32;
setp.lt.s32 %p8, %r34, %r36;
@%p8 bra $Lt_0_11778;
cvt.s64.s32 %rd22, %r2;
mul.wide.s32 %rd23, %r2, 4;
add.u64 %rd24, %rd23, %rd15;
add.u64 %rd25, %rd23, %rd14;
$Lt_0_12290:

	.loc	3	103	0
bar.sync 0;
.loc	3	104	0
ld.shared.f32 %f44, [%rd24+4];
mul.f32 %f45, %f44, %f2;
ld.shared.f32 %f46, [%rd24+0];
mad.f32 %f47, %f46, %f3, %f45;
st.shared.f32 [%rd25+0], %f47;
.loc	3	108	0
bar.sync 0;
.loc	3	109	0
ld.shared.f32 %f48, [%rd25+4];
mul.f32 %f49, %f48, %f2;
ld.shared.f32 %f50, [%rd25+0];
mad.f32 %f51, %f50, %f3, %f49;
st.shared.f32 [%rd24+0], %f51;
.loc	3	110	0
sub.s32 %r35, %r35, 2;
setp.le.s32 %p9, %r36, %r35;
@%p9 bra $Lt_0_12290;
$Lt_0_11778:
.loc	3	114	0
bar.sync 0;
setp.lt.s32 %p10, %r36, %r2;
@%p10 bra $Lt_0_12802;
.loc	3	116	0
cvt.s64.s32 %rd26, %r2;
mul.wide.s32 %rd27, %r2, 4;
add.u64 %rd28, %rd15, %rd27;
ld.shared.f32 %f52, [%rd28+0];
add.s32 %r37, %r2, %r28;
cvt.s64.s32 %rd29, %r37;
mul.wide.s32 %rd30, %r37, 4;
add.u64 %rd31, %rd13, %rd30;
st.global.f32 [%rd31+0], %f52;
$Lt_0_12802:
add.s32 %r28, %r28, 224;
setp.lt.s32 %p11, %r28, %r16;
@%p11 bra $Lt_0_11010;
$Lt_0_10498:
sub.s32 %r16, %r16, 32;
mov.u32 %r38, 0;
setp.ne.s32 %p12, %r16, %r38;
@%p12 bra $Lt_0_10242;
cvt.u32.u16 %r39, %tid.x;
mov.u32 %r40, 0;
setp.ne.u32 %p13, %r39, %r40;
@%p13 bra $Lt_0_13826;
.loc	3	120	0
ld.shared.f32 %f53, [__cuda___cuda_local_var_40991_34_non_const_callA8479748+0];
mov.u64 %rd32, d_CallValue;
mul.lo.u64 %rd33, %rd1, 4;
add.u64 %rd34, %rd32, %rd33;
st.global.f32 [%rd34+0], %f53;
$Lt_0_13826:
.loc	3	121	0
exit;
$LDWend__Z21binomialOptionsKernelv:
} 


Fatbin elf code:
================
arch = sm_20
code version = [1,7]
producer = cuda
host = linux
compile_size = 64bit
identifier = binomialOptions_SM10.cu

Fatbin ptx code:
================
arch = sm_20
code version = [4,0]
producer = cuda
host = linux
compile_size = 64bit
compressed
identifier = binomialOptions_SM10.cu






.version 4.0
.target sm_20
.address_size 64

.const .align 4 .b8 d_OptionData[20480];
.global .align 4 .b8 d_CallValue[4096];
.global .align 4 .b8 d_CallBuffer[8454144];



.entry _Z21binomialOptionsKernelv(

)
{
.reg .pred %p<13>;
.reg .s32 %r<29>;
.reg .f32 %f<36>;
.reg .s64 %rd<28>;

	.shared .align 4 .b8 _Z21binomialOptionsKernelv$__cuda_local_var_59101_34_non_const_callA[1028];

	.shared .align 4 .b8 _Z21binomialOptionsKernelv$__cuda_local_var_59102_34_non_const_callB[1028];

mov.u32 %r1, %ctaid.x;
mul.wide.u32 %rd10, %r1, 20;
mov.u64 %rd11, d_OptionData;
add.s64 %rd1, %rd11, %rd10;
ld.const.f32 %f1, [%rd1+12];
ld.const.f32 %f2, [%rd1+16];
mov.u32 %r2, %tid.x;
setp.gt.s32	%p1, %r2, 2048;
@%p1 bra BB0_3;

ld.const.f32 %f3, [%rd1];
ld.const.f32 %f4, [%rd1+4];
ld.const.f32 %f5, [%rd1+8];
cvt.s64.s32	%rd12, %r2;
mul.lo.s32 %r15, %r1, 2064;
cvt.u64.u32	%rd13, %r15;
add.s64 %rd14, %rd12, %rd13;
shl.b64 %rd15, %rd14, 2;
mov.u64 %rd16, d_CallBuffer;
add.s64 %rd27, %rd16, %rd15;
mov.u32 %r25, %r2;

BB0_2:
mov.u32 %r3, %r25;
cvt.rn.f32.s32	%f8, %r3;
fma.rn.f32 %f9, %f8, 0f40000000, 0fC5000000;
mul.f32 %f10, %f5, %f9;
mul.f32 %f11, %f10, 0f3FB8AA3B;
cvt.rzi.f32.f32	%f12, %f11;
mov.f32 %f13, 0fBF317200;
fma.rn.f32 %f14, %f12, %f13, %f10;
mov.f32 %f15, 0fB5BFBE8E;
fma.rn.f32 %f16, %f12, %f15, %f14;
mul.f32 %f7, %f16, 0f3FB8AA3B;

	ex2.approx.ftz.f32 %f6,%f7;

	add.f32 %f17, %f12, 0f00000000;
ex2.approx.f32 %f18, %f17;
mul.f32 %f19, %f6, %f18;
setp.lt.f32	%p2, %f10, 0fC2D20000;
selp.f32	%f20, 0f00000000, %f19, %p2;
setp.gt.f32	%p3, %f10, 0f42D20000;
selp.f32	%f21, 0f7F800000, %f20, %p3;
mul.f32 %f22, %f3, %f21;
sub.f32 %f23, %f22, %f4;
setp.gt.f32	%p4, %f23, 0f00000000;
selp.f32	%f24, %f23, 0f00000000, %p4;
st.global.f32 [%rd27], %f24;
add.s64 %rd27, %rd27, 1024;
add.s32 %r4, %r3, 256;
setp.lt.s32	%p5, %r4, 2049;
mov.u32 %r25, %r4;
@%p5 bra BB0_2;

BB0_3:
mul.lo.s32 %r17, %r1, 2064;
cvt.u64.u32	%rd5, %r17;
mul.wide.s32 %rd17, %r2, 4;
mov.u64 %rd18, _Z21binomialOptionsKernelv$__cuda_local_var_59101_34_non_const_callA;
add.s64 %rd6, %rd18, %rd17;
mov.u64 %rd19, _Z21binomialOptionsKernelv$__cuda_local_var_59102_34_non_const_callB;
add.s64 %rd7, %rd19, %rd17;
mov.u32 %r26, 2048;

BB0_4:
setp.lt.s32	%p6, %r26, 1;
@%p6 bra BB0_13;

mov.u32 %r27, 0;

BB0_6:
sub.s32 %r19, %r26, %r27;
mov.u32 %r20, 255;
min.s32 %r7, %r20, %r19;
add.s32 %r8, %r7, -32;
bar.sync 0;
mov.u32 %r21, %tid.x;
setp.gt.s32	%p7, %r21, %r7;
add.s32 %r22, %r27, %r21;
cvt.s64.s32	%rd20, %r22;
add.s64 %rd21, %rd20, %rd5;
shl.b64 %rd22, %rd21, 2;
mov.u64 %rd23, d_CallBuffer;
add.s64 %rd8, %rd23, %rd22;
@%p7 bra BB0_8;

ld.global.f32 %f25, [%rd8];
st.shared.f32 [%rd6], %f25;

BB0_8:
add.s32 %r28, %r7, -1;

BB0_9:
bar.sync 0;
ld.shared.f32 %f26, [%rd6+4];
ld.shared.f32 %f27, [%rd6];
mul.f32 %f28, %f2, %f27;
fma.rn.f32 %f29, %f1, %f26, %f28;
st.shared.f32 [%rd7], %f29;
bar.sync 0;
ld.shared.f32 %f30, [%rd7+4];
ld.shared.f32 %f31, [%rd7];
mul.f32 %f32, %f2, %f31;
fma.rn.f32 %f33, %f1, %f30, %f32;
st.shared.f32 [%rd6], %f33;
add.s32 %r28, %r28, -2;
setp.ge.s32	%p8, %r28, %r8;
@%p8 bra BB0_9;

bar.sync 0;
setp.gt.s32	%p9, %r21, %r8;
@%p9 bra BB0_12;

ld.shared.f32 %f34, [%rd6];
st.global.f32 [%rd8], %f34;

BB0_12:
add.s32 %r27, %r27, 224;
setp.lt.s32	%p10, %r27, %r26;
@%p10 bra BB0_6;

BB0_13:
add.s32 %r26, %r26, -32;
setp.gt.s32	%p11, %r26, 0;
@%p11 bra BB0_4;

mov.u32 %r23, %tid.x;
setp.ne.s32	%p12, %r23, 0;
@%p12 bra BB0_16;

ld.shared.f32 %f35, [_Z21binomialOptionsKernelv$__cuda_local_var_59101_34_non_const_callA];
mul.wide.u32 %rd24, %r1, 4;
mov.u64 %rd25, d_CallValue;
add.s64 %rd26, %rd25, %rd24;
st.global.f32 [%rd26], %f35;

BB0_16:
ret;
}



Fatbin elf code:
================
arch = sm_30
code version = [1,7]
producer = cuda
host = linux
compile_size = 64bit
identifier = binomialOptions_SM10.cu

Fatbin ptx code:
================
arch = sm_30
code version = [4,0]
producer = cuda
host = linux
compile_size = 64bit
compressed
identifier = binomialOptions_SM10.cu






.version 4.0
.target sm_30
.address_size 64

.const .align 4 .b8 d_OptionData[20480];
.global .align 4 .b8 d_CallValue[4096];
.global .align 4 .b8 d_CallBuffer[8454144];



.entry _Z21binomialOptionsKernelv(

)
{
.reg .pred %p<13>;
.reg .s32 %r<29>;
.reg .f32 %f<36>;
.reg .s64 %rd<28>;

	.shared .align 4 .b8 _Z21binomialOptionsKernelv$__cuda_local_var_59174_34_non_const_callA[1028];

	.shared .align 4 .b8 _Z21binomialOptionsKernelv$__cuda_local_var_59175_34_non_const_callB[1028];

mov.u32 %r1, %ctaid.x;
mul.wide.u32 %rd10, %r1, 20;
mov.u64 %rd11, d_OptionData;
add.s64 %rd1, %rd11, %rd10;
ld.const.f32 %f1, [%rd1+12];
ld.const.f32 %f2, [%rd1+16];
mov.u32 %r2, %tid.x;
setp.gt.s32	%p1, %r2, 2048;
@%p1 bra BB0_3;

ld.const.f32 %f3, [%rd1];
ld.const.f32 %f4, [%rd1+4];
ld.const.f32 %f5, [%rd1+8];
cvt.s64.s32	%rd12, %r2;
mul.lo.s32 %r15, %r1, 2064;
cvt.u64.u32	%rd13, %r15;
add.s64 %rd14, %rd12, %rd13;
shl.b64 %rd15, %rd14, 2;
mov.u64 %rd16, d_CallBuffer;
add.s64 %rd27, %rd16, %rd15;
mov.u32 %r25, %r2;

BB0_2:
mov.u32 %r3, %r25;
cvt.rn.f32.s32	%f8, %r3;
fma.rn.f32 %f9, %f8, 0f40000000, 0fC5000000;
mul.f32 %f10, %f5, %f9;
mul.f32 %f11, %f10, 0f3FB8AA3B;
cvt.rzi.f32.f32	%f12, %f11;
mov.f32 %f13, 0fBF317200;
fma.rn.f32 %f14, %f12, %f13, %f10;
mov.f32 %f15, 0fB5BFBE8E;
fma.rn.f32 %f16, %f12, %f15, %f14;
mul.f32 %f7, %f16, 0f3FB8AA3B;

	ex2.approx.ftz.f32 %f6,%f7;

	add.f32 %f17, %f12, 0f00000000;
ex2.approx.f32 %f18, %f17;
mul.f32 %f19, %f6, %f18;
setp.lt.f32	%p2, %f10, 0fC2D20000;
selp.f32	%f20, 0f00000000, %f19, %p2;
setp.gt.f32	%p3, %f10, 0f42D20000;
selp.f32	%f21, 0f7F800000, %f20, %p3;
mul.f32 %f22, %f3, %f21;
sub.f32 %f23, %f22, %f4;
setp.gt.f32	%p4, %f23, 0f00000000;
selp.f32	%f24, %f23, 0f00000000, %p4;
st.global.f32 [%rd27], %f24;
add.s64 %rd27, %rd27, 1024;
add.s32 %r4, %r3, 256;
setp.lt.s32	%p5, %r4, 2049;
mov.u32 %r25, %r4;
@%p5 bra BB0_2;

BB0_3:
mul.lo.s32 %r17, %r1, 2064;
cvt.u64.u32	%rd5, %r17;
mul.wide.s32 %rd17, %r2, 4;
mov.u64 %rd18, _Z21binomialOptionsKernelv$__cuda_local_var_59174_34_non_const_callA;
add.s64 %rd6, %rd18, %rd17;
mov.u64 %rd19, _Z21binomialOptionsKernelv$__cuda_local_var_59175_34_non_const_callB;
add.s64 %rd7, %rd19, %rd17;
mov.u32 %r26, 2048;

BB0_4:
setp.lt.s32	%p6, %r26, 1;
@%p6 bra BB0_13;

mov.u32 %r27, 0;

BB0_6:
sub.s32 %r19, %r26, %r27;
mov.u32 %r20, 255;
min.s32 %r7, %r20, %r19;
add.s32 %r8, %r7, -32;
bar.sync 0;
mov.u32 %r21, %tid.x;
setp.gt.s32	%p7, %r21, %r7;
add.s32 %r22, %r27, %r21;
cvt.s64.s32	%rd20, %r22;
add.s64 %rd21, %rd20, %rd5;
shl.b64 %rd22, %rd21, 2;
mov.u64 %rd23, d_CallBuffer;
add.s64 %rd8, %rd23, %rd22;
@%p7 bra BB0_8;

ld.global.f32 %f25, [%rd8];
st.shared.f32 [%rd6], %f25;

BB0_8:
add.s32 %r28, %r7, -1;

BB0_9:
bar.sync 0;
ld.shared.f32 %f26, [%rd6+4];
ld.shared.f32 %f27, [%rd6];
mul.f32 %f28, %f2, %f27;
fma.rn.f32 %f29, %f1, %f26, %f28;
st.shared.f32 [%rd7], %f29;
bar.sync 0;
ld.shared.f32 %f30, [%rd7+4];
ld.shared.f32 %f31, [%rd7];
mul.f32 %f32, %f2, %f31;
fma.rn.f32 %f33, %f1, %f30, %f32;
st.shared.f32 [%rd6], %f33;
add.s32 %r28, %r28, -2;
setp.ge.s32	%p8, %r28, %r8;
@%p8 bra BB0_9;

bar.sync 0;
setp.gt.s32	%p9, %r21, %r8;
@%p9 bra BB0_12;

ld.shared.f32 %f34, [%rd6];
st.global.f32 [%rd8], %f34;

BB0_12:
add.s32 %r27, %r27, 224;
setp.lt.s32	%p10, %r27, %r26;
@%p10 bra BB0_6;

BB0_13:
add.s32 %r26, %r26, -32;
setp.gt.s32	%p11, %r26, 0;
@%p11 bra BB0_4;

mov.u32 %r23, %tid.x;
setp.ne.s32	%p12, %r23, 0;
@%p12 bra BB0_16;

ld.shared.f32 %f35, [_Z21binomialOptionsKernelv$__cuda_local_var_59174_34_non_const_callA];
mul.wide.u32 %rd24, %r1, 4;
mov.u64 %rd25, d_CallValue;
add.s64 %rd26, %rd25, %rd24;
st.global.f32 [%rd26], %f35;

BB0_16:
ret;
}



Fatbin elf code:
================
arch = sm_13
code version = [1,2]
producer = cuda
host = linux
compile_size = 64bit
identifier = binomialOptions_SM13.cu

Fatbin ptx code:
================
arch = sm_13
code version = [1,4]
producer = cuda
host = linux
compile_size = 64bit
compressed
identifier = binomialOptions_SM13.cu
	.version 1.4
.target sm_13

	


	
	


	
	
	
	
	
	
	

.file	1	"<command-line>"
.file	2	"/tmp/tmpxft_0000646d_00000000-15_binomialOptions_SM13.compute_13.cudafe2.gpu"
.file	3	"binomialOptions_kernel.cuh"
.file	4	"/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stddef.h"
.file	5	"/home/paperspace/cudax/cuda/include/crt/device_runtime.h"
.file	6	"/home/paperspace/cudax/cuda/include/host_defines.h"
.file	7	"/home/paperspace/cudax/cuda/include/builtin_types.h"
.file	8	"/home/paperspace/cudax/cuda/include/device_types.h"
.file	9	"/home/paperspace/cudax/cuda/include/driver_types.h"
.file	10	"/home/paperspace/cudax/cuda/include/surface_types.h"
.file	11	"/home/paperspace/cudax/cuda/include/texture_types.h"
.file	12	"/home/paperspace/cudax/cuda/include/vector_types.h"
.file	13	"/home/paperspace/cudax/cuda/include/device_launch_parameters.h"
.file	14	"/home/paperspace/cudax/cuda/include/crt/storage_class.h"
.file	15	"realtype.h"
.file	16	"/home/paperspace/cudax/cuda/include/common_functions.h"
.file	17	"/home/paperspace/cudax/cuda/include/math_functions.h"
.file	18	"/home/paperspace/cudax/cuda/include/math_constants.h"
.file	19	"/home/paperspace/cudax/cuda/include/device_functions.h"
.file	20	"/home/paperspace/cudax/cuda/include/sm_11_atomic_functions.h"
.file	21	"/home/paperspace/cudax/cuda/include/sm_12_atomic_functions.h"
.file	22	"/home/paperspace/cudax/cuda/include/sm_13_double_functions.h"
.file	23	"/home/paperspace/cudax/cuda/include/sm_20_atomic_functions.h"
.file	24	"/home/paperspace/cudax/cuda/include/sm_32_atomic_functions.h"
.file	25	"/home/paperspace/cudax/cuda/include/sm_35_atomic_functions.h"
.file	26	"/home/paperspace/cudax/cuda/include/sm_20_intrinsics.h"
.file	27	"/home/paperspace/cudax/cuda/include/sm_30_intrinsics.h"
.file	28	"/home/paperspace/cudax/cuda/include/sm_32_intrinsics.h"
.file	29	"/home/paperspace/cudax/cuda/include/sm_35_intrinsics.h"
.file	30	"/home/paperspace/cudax/cuda/include/surface_functions.h"
.file	31	"/home/paperspace/cudax/cuda/include/texture_fetch_functions.h"
.file	32	"/home/paperspace/cudax/cuda/include/texture_indirect_functions.h"
.file	33	"/home/paperspace/cudax/cuda/include/surface_indirect_functions.h"
.file	34	"/home/paperspace/cudax/cuda/include/math_functions_dbl_ptx3.h"

.const .align 8 .b8 d_OptionData[40960];
.global .align 4 .b8 d_CallValue[4096];
.global .align 8 .b8 d_CallBuffer[16908288];

.entry _Z21binomialOptionsKernelv
{
.reg .u32 %r<64>;
.reg .u64 %rd<36>;
.reg .f32 %f<3>;
.reg .f64 %fd<67>;
.reg .pred %p<17>;
.shared .align 8 .b8 __cuda___cuda_local_var_41402_34_non_const_callB16953344[2056];
.shared .align 8 .b8 __cuda___cuda_local_var_41401_34_non_const_callA16955400[2056];
.loc	3	70	0
$LDWbegin__Z21binomialOptionsKernelv:
.loc	3	79	0
cvt.u32.u16 %r1, %ctaid.x;
cvt.u64.u32 %rd1, %r1;
mov.u64 %rd2, d_OptionData;
mul.wide.u32 %rd3, %r1, 40;
add.u64 %rd4, %rd2, %rd3;
ld.const.f64 %fd1, [%rd4+16];
.loc	3	80	0
ld.const.f64 %fd2, [%rd4+24];
.loc	3	81	0
ld.const.f64 %fd3, [%rd4+32];
.loc	3	84	0
cvt.s32.u16 %r2, %tid.x;
mov.s32 %r3, %r2;
mov.u32 %r4, 2048;
setp.gt.s32 %p1, %r2, %r4;
@%p1 bra $Lt_0_17154;
mov.u64 %rd5, d_CallBuffer;
mov.s32 %r5, 2304;
sub.s32 %r6, %r5, %r2;
shr.s32 %r7, %r6, 31;
mov.s32 %r8, 255;
and.b32 %r9, %r7, %r8;
add.s32 %r10, %r9, %r6;
shr.s32 %r11, %r10, 8;
mul.lo.u32 %r12, %r1, 2064;
cvt.s64.s32 %rd6, %r2;
cvt.u64.u32 %rd7, %r12;
mul.wide.s32 %rd8, %r2, 8;
mul.wide.u32 %rd9, %r12, 8;
ld.const.f64 %fd4, [%rd4+8];
ld.const.f64 %fd5, [%rd4+0];
add.s64 %rd10, %rd9, %rd8;
add.u64 %rd11, %rd5, %rd10;
mov.s32 %r13, %r11;
$Lt_0_11010:

	.loc	3	85	0
cvt.rn.f64.s32 %fd6, %r3;
add.f64 %fd7, %fd6, %fd6;
mov.f64 %fd8, 0dc0a0000000000000;	
	add.f64 %fd9, %fd7, %fd8;
mul.f64 %fd10, %fd1, %fd9;
mov.b64 {%r14,%r15}, %fd10;
mov.s32 %r16, -1064875759;
set.lt.u32.s32 %r17, %r15, %r16;
neg.s32 %r18, %r17;
mov.u32 %r19, 1082535490;
set.le.u32.u32 %r20, %r15, %r19;
neg.s32 %r21, %r20;
or.b32 %r22, %r18, %r21;
mov.u32 %r23, 0;
setp.eq.s32 %p2, %r22, %r23;
@%p2 bra $Lt_0_11522;
.loc	34	1550	0
mov.f64 %fd11, 0d3ff71547652b82fe;	
	mul.f64 %fd12, %fd10, %fd11;
cvt.rni.f64.f64 %fd13, %fd12;
mov.f64 %fd14, 0dbfe62e42fefa39ef;	
	mad.rn.f64 %fd15, %fd13, %fd14, %fd10;
mov.f64 %fd16, 0dbc7abc9e3b39803f;	
	mad.rn.f64 %fd17, %fd13, %fd16, %fd15;
mov.f64 %fd18, 0d3e5ae6449c0686c0;	
	mov.f64 %fd19, 0d3e928a27e30f5561;	
	mad.rn.f64 %fd20, %fd18, %fd17, %fd19;
.loc	34	1551	0
mov.f64 %fd21, 0d3ec71de8e6486d6b;	
	mad.rn.f64 %fd22, %fd20, %fd17, %fd21;
.loc	34	1552	0
mov.f64 %fd23, 0d3efa019a6b2464c5;	
	mad.rn.f64 %fd24, %fd22, %fd17, %fd23;
.loc	34	1553	0
mov.f64 %fd25, 0d3f2a01a0171064a5;	
	mad.rn.f64 %fd26, %fd24, %fd17, %fd25;
.loc	34	1554	0
mov.f64 %fd27, 0d3f56c16c17f29c8d;	
	mad.rn.f64 %fd28, %fd26, %fd17, %fd27;
.loc	34	1555	0
mov.f64 %fd29, 0d3f8111111111a24e;	
	mad.rn.f64 %fd30, %fd28, %fd17, %fd29;
.loc	34	1556	0
mov.f64 %fd31, 0d3fa555555555211d;	
	mad.rn.f64 %fd32, %fd30, %fd17, %fd31;
.loc	34	1557	0
mov.f64 %fd33, 0d3fc5555555555530;	
	mad.rn.f64 %fd34, %fd32, %fd17, %fd33;
.loc	34	1558	0
mov.f64 %fd35, 0d3fe0000000000005;	
	mad.rn.f64 %fd36, %fd34, %fd17, %fd35;
.loc	34	1559	0
mov.f64 %fd37, 0d3ff0000000000000;	
	mad.rn.f64 %fd38, %fd36, %fd17, %fd37;
.loc	34	1560	0
mov.f64 %fd39, 0d3ff0000000000000;	
	mad.rn.f64 %fd40, %fd38, %fd17, %fd39;
.loc	34	1604	0
mov.f64 %fd41, %fd40;
cvt.rzi.s32.f64 %r24, %fd13;
add.u32 %r25, %r24, 1022;
mov.u32 %r26, 2044;
setp.gt.u32 %p3, %r25, %r26;
@%p3 bra $Lt_0_12034;
.loc	34	1570	0
shl.b32 %r27, %r24, 20;
add.u32 %r28, %r27, 1072693248;
bra.uni $Lt_0_11778;
$Lt_0_12034:
.loc	34	1575	0
add.u32 %r29, %r24, 2046;
shr.u32 %r30, %r29, 1;
shl.b32 %r31, %r30, 20;
shl.b32 %r32, %r29, 20;
sub.u32 %r28, %r32, %r31;
.loc	34	1576	0
mov.s32 %r33, 0;
mov.b64 %fd42, {%r33,%r31};
mul.f64 %fd41, %fd40, %fd42;
$Lt_0_11778:
.loc	34	1578	0
mov.s32 %r34, 0;
mov.b64 %fd43, {%r34,%r28};
mul.f64 %fd41, %fd41, %fd43;
.loc	34	1643	0
mov.f64 %fd44, %fd41;
bra.uni $Lt_0_11266;
$Lt_0_11522:
.loc	34	1645	0
mov.f64 %fd45, 0d7ff0000000000000;	
	mov.f64 %fd46, 0d0000000000000000;	
	mov.s32 %r35, 0;
setp.ge.s32 %p4, %r15, %r35;
selp.f64 %fd47, %fd45, %fd46, %p4;
add.f64 %fd48, %fd10, %fd10;
abs.f64 %fd49, %fd10;
mov.f64 %fd50, 0d7ff0000000000000;	
	setp.le.f64 %p5, %fd49, %fd50;
selp.f64 %fd44, %fd47, %fd48, %p5;
$Lt_0_11266:
.loc	3	85	0
mul.f64 %fd51, %fd5, %fd44;
sub.f64 %fd52, %fd51, %fd4;
mov.f64 %fd53, 0d0000000000000000;	
	max.f64 %fd54, %fd52, %fd53;
st.global.f64 [%rd11+0], %fd54;
add.s32 %r3, %r3, 256;
add.u64 %rd11, %rd11, 2048;
mov.u32 %r36, 2048;
setp.le.s32 %p6, %r3, %r36;
@%p6 bra $Lt_0_11010;
bra.uni $Lt_0_10498;
$Lt_0_17154:
mul.lo.u32 %r37, %r1, 2064;
cvt.u64.u32 %rd12, %r37;
mul.wide.u32 %rd9, %r37, 8;
mov.u64 %rd5, d_CallBuffer;
$Lt_0_10498:
add.u64 %rd13, %rd9, %rd5;
mov.s32 %r38, 2048;
mov.u64 %rd14, __cuda___cuda_local_var_41402_34_non_const_callB16953344;
mov.u64 %rd15, __cuda___cuda_local_var_41401_34_non_const_callA16955400;
$Lt_0_13058:

	mov.u32 %r39, 0;
setp.le.s32 %p7, %r38, %r39;
@%p7 bra $Lt_0_13314;
add.s32 %r40, %r38, 223;
mov.s32 %r41, 613566757;
mov.s32 %r42, 0;
setp.lt.s32 %p8, %r40, %r42;
abs.s32 %r43, %r40;
mul.hi.u32 %r44, %r43, %r41;
sub.u32 %r45, %r43, %r44;
shr.u32 %r46, %r45, 1;
add.u32 %r47, %r46, %r44;
shr.s32 %r48, %r47, 7;
@%p8 sub.s32 %r48, %r42, %r48;
mov.s32 %r49, %r48;
mov.s32 %r50, 0;
mov.s32 %r51, %r49;
$Lt_0_13826:

	.loc	3	96	0
bar.sync 0;
sub.s32 %r52, %r38, %r50;
mov.s32 %r53, 255;
min.s32 %r54, %r52, %r53;
setp.lt.s32 %p9, %r54, %r2;
@%p9 bra $Lt_0_14082;
.loc	3	98	0
add.s32 %r55, %r2, %r50;
cvt.s64.s32 %rd16, %r55;
mul.wide.s32 %rd17, %r55, 8;
add.u64 %rd18, %rd13, %rd17;
ld.global.f64 %fd55, [%rd18+0];
cvt.s64.s32 %rd19, %r2;
mul.wide.s32 %rd20, %r2, 8;
add.u64 %rd21, %rd15, %rd20;
st.shared.f64 [%rd21+0], %fd55;
$Lt_0_14082:
.loc	3	101	0
sub.s32 %r56, %r54, 1;
mov.s32 %r57, %r56;
sub.s32 %r58, %r54, 32;
setp.lt.s32 %p10, %r56, %r58;
@%p10 bra $Lt_0_14594;
cvt.s64.s32 %rd22, %r2;
mul.wide.s32 %rd23, %r2, 8;
add.u64 %rd24, %rd23, %rd15;
add.u64 %rd25, %rd23, %rd14;
$Lt_0_15106:

	.loc	3	103	0
bar.sync 0;
.loc	3	104	0
ld.shared.f64 %fd56, [%rd24+8];
mul.f64 %fd57, %fd56, %fd2;
ld.shared.f64 %fd58, [%rd24+0];
mad.rn.f64 %fd59, %fd58, %fd3, %fd57;
st.shared.f64 [%rd25+0], %fd59;
.loc	3	108	0
bar.sync 0;
.loc	3	109	0
ld.shared.f64 %fd60, [%rd25+8];
mul.f64 %fd61, %fd60, %fd2;
ld.shared.f64 %fd62, [%rd25+0];
mad.rn.f64 %fd63, %fd62, %fd3, %fd61;
st.shared.f64 [%rd24+0], %fd63;
.loc	3	110	0
sub.s32 %r57, %r57, 2;
setp.le.s32 %p11, %r58, %r57;
@%p11 bra $Lt_0_15106;
$Lt_0_14594:
.loc	3	114	0
bar.sync 0;
setp.lt.s32 %p12, %r58, %r2;
@%p12 bra $Lt_0_15618;
.loc	3	116	0
cvt.s64.s32 %rd26, %r2;
mul.wide.s32 %rd27, %r2, 8;
add.u64 %rd28, %rd15, %rd27;
ld.shared.f64 %fd64, [%rd28+0];
add.s32 %r59, %r2, %r50;
cvt.s64.s32 %rd29, %r59;
mul.wide.s32 %rd30, %r59, 8;
add.u64 %rd31, %rd13, %rd30;
st.global.f64 [%rd31+0], %fd64;
$Lt_0_15618:
add.s32 %r50, %r50, 224;
setp.lt.s32 %p13, %r50, %r38;
@%p13 bra $Lt_0_13826;
$Lt_0_13314:
sub.s32 %r38, %r38, 32;
mov.u32 %r60, 0;
setp.ne.s32 %p14, %r38, %r60;
@%p14 bra $Lt_0_13058;
cvt.u32.u16 %r61, %tid.x;
mov.u32 %r62, 0;
setp.ne.u32 %p15, %r61, %r62;
@%p15 bra $Lt_0_16642;
.loc	3	120	0
ld.shared.f64 %fd65, [__cuda___cuda_local_var_41401_34_non_const_callA16955400+0];
cvt.rn.f32.f64 %f1, %fd65;
mov.u64 %rd32, d_CallValue;
mul.lo.u64 %rd33, %rd1, 4;
add.u64 %rd34, %rd32, %rd33;
st.global.f32 [%rd34+0], %f1;
$Lt_0_16642:
.loc	3	121	0
exit;
$LDWend__Z21binomialOptionsKernelv:
} 


Fatbin elf code:
================
arch = sm_20
code version = [1,7]
producer = cuda
host = linux
compile_size = 64bit
identifier = binomialOptions_SM13.cu

Fatbin ptx code:
================
arch = sm_20
code version = [4,0]
producer = cuda
host = linux
compile_size = 64bit
compressed
identifier = binomialOptions_SM13.cu






.version 4.0
.target sm_20
.address_size 64

.const .align 8 .b8 d_OptionData[40960];
.global .align 4 .b8 d_CallValue[4096];
.global .align 8 .b8 d_CallBuffer[16908288];



.entry _Z21binomialOptionsKernelv(

)
{
.reg .pred %p<17>;
.reg .s32 %r<44>;
.reg .f32 %f<2>;
.reg .s64 %rd<28>;
.reg .f64 %fd<63>;

	.shared .align 8 .b8 _Z21binomialOptionsKernelv$__cuda_local_var_59100_34_non_const_callA[2056];

	.shared .align 8 .b8 _Z21binomialOptionsKernelv$__cuda_local_var_59101_34_non_const_callB[2056];

mov.u32 %r1, %ctaid.x;
mul.wide.u32 %rd10, %r1, 40;
mov.u64 %rd11, d_OptionData;
add.s64 %rd1, %rd11, %rd10;
ld.const.f64 %fd1, [%rd1+24];
ld.const.f64 %fd2, [%rd1+32];
mov.u32 %r39, %tid.x;
setp.gt.s32	%p1, %r39, 2048;
@%p1 bra BB0_9;

ld.const.f64 %fd3, [%rd1];
ld.const.f64 %fd4, [%rd1+8];
ld.const.f64 %fd5, [%rd1+16];
cvt.s64.s32	%rd12, %r39;
mul.lo.s32 %r20, %r1, 2064;
cvt.u64.u32	%rd13, %r20;
add.s64 %rd14, %rd12, %rd13;
shl.b64 %rd15, %rd14, 3;
mov.u64 %rd16, d_CallBuffer;
add.s64 %rd27, %rd16, %rd15;

BB0_2:
cvt.rn.f64.s32	%fd13, %r39;
fma.rn.f64 %fd14, %fd13, 0d4000000000000000, 0dC0A0000000000000;
mul.f64 %fd6, %fd5, %fd14;
{
.reg .b32 %temp; 
mov.b64 {%temp, %r4}, %fd6;
}
setp.lt.u32	%p2, %r4, 1082535491;
setp.lt.s32	%p3, %r4, -1064875759;
or.pred %p4, %p2, %p3;
@%p4 bra BB0_4;

setp.lt.s32	%p5, %r4, 0;
selp.f64	%fd15, 0d0000000000000000, 0d7FF0000000000000, %p5;
abs.f64 %fd16, %fd6;
setp.gtu.f64	%p6, %fd16, 0d7FF0000000000000;
add.f64 %fd17, %fd6, %fd6;
selp.f64	%fd62, %fd17, %fd15, %p6;
bra.uni BB0_8;

BB0_4:
mul.f64 %fd18, %fd6, 0d3FF71547652B82FE;
cvt.rni.f64.f64	%fd19, %fd18;
cvt.rzi.s32.f64	%r5, %fd19;
mov.f64 %fd20, 0dBFE62E42FEFA39EF;
fma.rn.f64 %fd21, %fd19, %fd20, %fd6;
mov.f64 %fd22, 0dBC7ABC9E3B39803F;
fma.rn.f64 %fd23, %fd19, %fd22, %fd21;
mov.f64 %fd24, 0d3E928A27E30F5561;
mov.f64 %fd25, 0d3E5AE6449C0686C0;
fma.rn.f64 %fd26, %fd25, %fd23, %fd24;
mov.f64 %fd27, 0d3EC71DE8E6486D6B;
fma.rn.f64 %fd28, %fd26, %fd23, %fd27;
mov.f64 %fd29, 0d3EFA019A6B2464C5;
fma.rn.f64 %fd30, %fd28, %fd23, %fd29;
mov.f64 %fd31, 0d3F2A01A0171064A5;
fma.rn.f64 %fd32, %fd30, %fd23, %fd31;
mov.f64 %fd33, 0d3F56C16C17F29C8D;
fma.rn.f64 %fd34, %fd32, %fd23, %fd33;
mov.f64 %fd35, 0d3F8111111111A24E;
fma.rn.f64 %fd36, %fd34, %fd23, %fd35;
mov.f64 %fd37, 0d3FA555555555211D;
fma.rn.f64 %fd38, %fd36, %fd23, %fd37;
mov.f64 %fd39, 0d3FC5555555555530;
fma.rn.f64 %fd40, %fd38, %fd23, %fd39;
mov.f64 %fd41, 0d3FE0000000000005;
fma.rn.f64 %fd42, %fd40, %fd23, %fd41;
mov.f64 %fd43, 0d3FF0000000000000;
fma.rn.f64 %fd44, %fd42, %fd23, %fd43;
fma.rn.f64 %fd61, %fd44, %fd23, %fd43;
abs.s32 %r21, %r5;
setp.lt.s32	%p7, %r21, 1023;
@%p7 bra BB0_6;

add.s32 %r22, %r5, 2046;
shl.b32 %r23, %r22, 19;
and.b32 %r24, %r23, -1048576;
shl.b32 %r25, %r22, 20;
sub.s32 %r40, %r25, %r24;
mov.u32 %r26, 0;
mov.b64 %fd45, {%r26, %r24};
mul.f64 %fd61, %fd61, %fd45;
bra.uni BB0_7;

BB0_6:
shl.b32 %r27, %r5, 20;
add.s32 %r40, %r27, 1072693248;

BB0_7:
mov.u32 %r28, 0;
mov.b64 %fd46, {%r28, %r40};
mul.f64 %fd62, %fd61, %fd46;

BB0_8:
mul.f64 %fd47, %fd3, %fd62;
sub.f64 %fd48, %fd47, %fd4;
setp.gt.f64	%p8, %fd48, 0d0000000000000000;
selp.f64	%fd49, %fd48, 0d0000000000000000, %p8;
st.global.f64 [%rd27], %fd49;
add.s64 %rd27, %rd27, 2048;
add.s32 %r39, %r39, 256;
setp.lt.s32	%p9, %r39, 2049;
@%p9 bra BB0_2;

BB0_9:
mul.lo.s32 %r30, %r1, 2064;
cvt.u64.u32	%rd5, %r30;
mov.u32 %r31, %tid.x;
mul.wide.s32 %rd17, %r31, 8;
mov.u64 %rd18, _Z21binomialOptionsKernelv$__cuda_local_var_59100_34_non_const_callA;
add.s64 %rd6, %rd18, %rd17;
mov.u64 %rd19, _Z21binomialOptionsKernelv$__cuda_local_var_59101_34_non_const_callB;
add.s64 %rd7, %rd19, %rd17;
mov.u32 %r41, 2048;

BB0_10:
setp.lt.s32	%p10, %r41, 1;
@%p10 bra BB0_19;

mov.u32 %r42, 0;

BB0_12:
sub.s32 %r33, %r41, %r42;
mov.u32 %r34, 255;
min.s32 %r12, %r34, %r33;
add.s32 %r13, %r12, -32;
bar.sync 0;
setp.gt.s32	%p11, %r31, %r12;
add.s32 %r36, %r42, %r31;
cvt.s64.s32	%rd20, %r36;
add.s64 %rd21, %rd20, %rd5;
shl.b64 %rd22, %rd21, 3;
mov.u64 %rd23, d_CallBuffer;
add.s64 %rd8, %rd23, %rd22;
@%p11 bra BB0_14;

ld.global.f64 %fd50, [%rd8];
st.shared.f64 [%rd6], %fd50;

BB0_14:
add.s32 %r43, %r12, -1;

BB0_15:
bar.sync 0;
ld.shared.f64 %fd51, [%rd6+8];
ld.shared.f64 %fd52, [%rd6];
mul.f64 %fd53, %fd2, %fd52;
fma.rn.f64 %fd54, %fd1, %fd51, %fd53;
st.shared.f64 [%rd7], %fd54;
bar.sync 0;
ld.shared.f64 %fd55, [%rd7+8];
ld.shared.f64 %fd56, [%rd7];
mul.f64 %fd57, %fd2, %fd56;
fma.rn.f64 %fd58, %fd1, %fd55, %fd57;
st.shared.f64 [%rd6], %fd58;
add.s32 %r43, %r43, -2;
setp.ge.s32	%p12, %r43, %r13;
@%p12 bra BB0_15;

bar.sync 0;
setp.gt.s32	%p13, %r31, %r13;
@%p13 bra BB0_18;

ld.shared.f64 %fd59, [%rd6];
st.global.f64 [%rd8], %fd59;

BB0_18:
add.s32 %r42, %r42, 224;
setp.lt.s32	%p14, %r42, %r41;
@%p14 bra BB0_12;

BB0_19:
add.s32 %r41, %r41, -32;
setp.gt.s32	%p15, %r41, 0;
@%p15 bra BB0_10;

setp.ne.s32	%p16, %r31, 0;
@%p16 bra BB0_22;

ld.shared.f64 %fd60, [_Z21binomialOptionsKernelv$__cuda_local_var_59100_34_non_const_callA];
cvt.rn.f32.f64	%f1, %fd60;
mul.wide.u32 %rd24, %r1, 4;
mov.u64 %rd25, d_CallValue;
add.s64 %rd26, %rd25, %rd24;
st.global.f32 [%rd26], %f1;

BB0_22:
ret;
}



Fatbin elf code:
================
arch = sm_30
code version = [1,7]
producer = cuda
host = linux
compile_size = 64bit
identifier = binomialOptions_SM13.cu

Fatbin ptx code:
================
arch = sm_30
code version = [4,0]
producer = cuda
host = linux
compile_size = 64bit
compressed
identifier = binomialOptions_SM13.cu






.version 4.0
.target sm_30
.address_size 64

.const .align 8 .b8 d_OptionData[40960];
.global .align 4 .b8 d_CallValue[4096];
.global .align 8 .b8 d_CallBuffer[16908288];



.entry _Z21binomialOptionsKernelv(

)
{
.reg .pred %p<17>;
.reg .s32 %r<44>;
.reg .f32 %f<2>;
.reg .s64 %rd<28>;
.reg .f64 %fd<63>;

	.shared .align 8 .b8 _Z21binomialOptionsKernelv$__cuda_local_var_59173_34_non_const_callA[2056];

	.shared .align 8 .b8 _Z21binomialOptionsKernelv$__cuda_local_var_59174_34_non_const_callB[2056];

mov.u32 %r1, %ctaid.x;
mul.wide.u32 %rd10, %r1, 40;
mov.u64 %rd11, d_OptionData;
add.s64 %rd1, %rd11, %rd10;
ld.const.f64 %fd1, [%rd1+24];
ld.const.f64 %fd2, [%rd1+32];
mov.u32 %r39, %tid.x;
setp.gt.s32	%p1, %r39, 2048;
@%p1 bra BB0_9;

ld.const.f64 %fd3, [%rd1];
ld.const.f64 %fd4, [%rd1+8];
ld.const.f64 %fd5, [%rd1+16];
cvt.s64.s32	%rd12, %r39;
mul.lo.s32 %r20, %r1, 2064;
cvt.u64.u32	%rd13, %r20;
add.s64 %rd14, %rd12, %rd13;
shl.b64 %rd15, %rd14, 3;
mov.u64 %rd16, d_CallBuffer;
add.s64 %rd27, %rd16, %rd15;

BB0_2:
cvt.rn.f64.s32	%fd13, %r39;
fma.rn.f64 %fd14, %fd13, 0d4000000000000000, 0dC0A0000000000000;
mul.f64 %fd6, %fd5, %fd14;
{
.reg .b32 %temp; 
mov.b64 {%temp, %r4}, %fd6;
}
setp.lt.u32	%p2, %r4, 1082535491;
setp.lt.s32	%p3, %r4, -1064875759;
or.pred %p4, %p2, %p3;
@%p4 bra BB0_4;

setp.lt.s32	%p5, %r4, 0;
selp.f64	%fd15, 0d0000000000000000, 0d7FF0000000000000, %p5;
abs.f64 %fd16, %fd6;
setp.gtu.f64	%p6, %fd16, 0d7FF0000000000000;
add.f64 %fd17, %fd6, %fd6;
selp.f64	%fd62, %fd17, %fd15, %p6;
bra.uni BB0_8;

BB0_4:
mul.f64 %fd18, %fd6, 0d3FF71547652B82FE;
cvt.rni.f64.f64	%fd19, %fd18;
cvt.rzi.s32.f64	%r5, %fd19;
mov.f64 %fd20, 0dBFE62E42FEFA39EF;
fma.rn.f64 %fd21, %fd19, %fd20, %fd6;
mov.f64 %fd22, 0dBC7ABC9E3B39803F;
fma.rn.f64 %fd23, %fd19, %fd22, %fd21;
mov.f64 %fd24, 0d3E928A27E30F5561;
mov.f64 %fd25, 0d3E5AE6449C0686C0;
fma.rn.f64 %fd26, %fd25, %fd23, %fd24;
mov.f64 %fd27, 0d3EC71DE8E6486D6B;
fma.rn.f64 %fd28, %fd26, %fd23, %fd27;
mov.f64 %fd29, 0d3EFA019A6B2464C5;
fma.rn.f64 %fd30, %fd28, %fd23, %fd29;
mov.f64 %fd31, 0d3F2A01A0171064A5;
fma.rn.f64 %fd32, %fd30, %fd23, %fd31;
mov.f64 %fd33, 0d3F56C16C17F29C8D;
fma.rn.f64 %fd34, %fd32, %fd23, %fd33;
mov.f64 %fd35, 0d3F8111111111A24E;
fma.rn.f64 %fd36, %fd34, %fd23, %fd35;
mov.f64 %fd37, 0d3FA555555555211D;
fma.rn.f64 %fd38, %fd36, %fd23, %fd37;
mov.f64 %fd39, 0d3FC5555555555530;
fma.rn.f64 %fd40, %fd38, %fd23, %fd39;
mov.f64 %fd41, 0d3FE0000000000005;
fma.rn.f64 %fd42, %fd40, %fd23, %fd41;
mov.f64 %fd43, 0d3FF0000000000000;
fma.rn.f64 %fd44, %fd42, %fd23, %fd43;
fma.rn.f64 %fd61, %fd44, %fd23, %fd43;
abs.s32 %r21, %r5;
setp.lt.s32	%p7, %r21, 1023;
@%p7 bra BB0_6;

add.s32 %r22, %r5, 2046;
shl.b32 %r23, %r22, 19;
and.b32 %r24, %r23, -1048576;
shl.b32 %r25, %r22, 20;
sub.s32 %r40, %r25, %r24;
mov.u32 %r26, 0;
mov.b64 %fd45, {%r26, %r24};
mul.f64 %fd61, %fd61, %fd45;
bra.uni BB0_7;

BB0_6:
shl.b32 %r27, %r5, 20;
add.s32 %r40, %r27, 1072693248;

BB0_7:
mov.u32 %r28, 0;
mov.b64 %fd46, {%r28, %r40};
mul.f64 %fd62, %fd61, %fd46;

BB0_8:
mul.f64 %fd47, %fd3, %fd62;
sub.f64 %fd48, %fd47, %fd4;
setp.gt.f64	%p8, %fd48, 0d0000000000000000;
selp.f64	%fd49, %fd48, 0d0000000000000000, %p8;
st.global.f64 [%rd27], %fd49;
add.s64 %rd27, %rd27, 2048;
add.s32 %r39, %r39, 256;
setp.lt.s32	%p9, %r39, 2049;
@%p9 bra BB0_2;

BB0_9:
mul.lo.s32 %r30, %r1, 2064;
cvt.u64.u32	%rd5, %r30;
mov.u32 %r31, %tid.x;
mul.wide.s32 %rd17, %r31, 8;
mov.u64 %rd18, _Z21binomialOptionsKernelv$__cuda_local_var_59173_34_non_const_callA;
add.s64 %rd6, %rd18, %rd17;
mov.u64 %rd19, _Z21binomialOptionsKernelv$__cuda_local_var_59174_34_non_const_callB;
add.s64 %rd7, %rd19, %rd17;
mov.u32 %r41, 2048;

BB0_10:
setp.lt.s32	%p10, %r41, 1;
@%p10 bra BB0_19;

mov.u32 %r42, 0;

BB0_12:
sub.s32 %r33, %r41, %r42;
mov.u32 %r34, 255;
min.s32 %r12, %r34, %r33;
add.s32 %r13, %r12, -32;
bar.sync 0;
setp.gt.s32	%p11, %r31, %r12;
add.s32 %r36, %r42, %r31;
cvt.s64.s32	%rd20, %r36;
add.s64 %rd21, %rd20, %rd5;
shl.b64 %rd22, %rd21, 3;
mov.u64 %rd23, d_CallBuffer;
add.s64 %rd8, %rd23, %rd22;
@%p11 bra BB0_14;

ld.global.f64 %fd50, [%rd8];
st.shared.f64 [%rd6], %fd50;

BB0_14:
add.s32 %r43, %r12, -1;

BB0_15:
bar.sync 0;
ld.shared.f64 %fd51, [%rd6+8];
ld.shared.f64 %fd52, [%rd6];
mul.f64 %fd53, %fd2, %fd52;
fma.rn.f64 %fd54, %fd1, %fd51, %fd53;
st.shared.f64 [%rd7], %fd54;
bar.sync 0;
ld.shared.f64 %fd55, [%rd7+8];
ld.shared.f64 %fd56, [%rd7];
mul.f64 %fd57, %fd2, %fd56;
fma.rn.f64 %fd58, %fd1, %fd55, %fd57;
st.shared.f64 [%rd6], %fd58;
add.s32 %r43, %r43, -2;
setp.ge.s32	%p12, %r43, %r13;
@%p12 bra BB0_15;

bar.sync 0;
setp.gt.s32	%p13, %r31, %r13;
@%p13 bra BB0_18;

ld.shared.f64 %fd59, [%rd6];
st.global.f64 [%rd8], %fd59;

BB0_18:
add.s32 %r42, %r42, 224;
setp.lt.s32	%p14, %r42, %r41;
@%p14 bra BB0_12;

BB0_19:
add.s32 %r41, %r41, -32;
setp.gt.s32	%p15, %r41, 0;
@%p15 bra BB0_10;

setp.ne.s32	%p16, %r31, 0;
@%p16 bra BB0_22;

ld.shared.f64 %fd60, [_Z21binomialOptionsKernelv$__cuda_local_var_59173_34_non_const_callA];
cvt.rn.f32.f64	%f1, %fd60;
mul.wide.u32 %rd24, %r1, 4;
mov.u64 %rd25, d_CallValue;
add.s64 %rd26, %rd25, %rd24;
st.global.f32 [%rd26], %f1;

BB0_22:
ret;
}


