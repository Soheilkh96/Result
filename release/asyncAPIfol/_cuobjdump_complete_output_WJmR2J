
Fatbin elf code:
================
arch = sm_10
code version = [1,2]
producer = cuda
host = linux
compile_size = 64bit
identifier = asyncAPI.cu

Fatbin ptx code:
================
arch = sm_10
code version = [1,4]
producer = cuda
host = linux
compile_size = 64bit
compressed
identifier = asyncAPI.cu
	.version 1.4
.target sm_10, map_f64_to_f32

	


	
	


	
	
	
	
	
	
	

.file	1	"<command-line>"
.file	2	"/tmp/tmpxft_00006437_00000000-15_asyncAPI.compute_10.cudafe2.gpu"
.file	3	"/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stddef.h"
.file	4	"/home/paperspace/cudax/cuda/include/crt/device_runtime.h"
.file	5	"/home/paperspace/cudax/cuda/include/host_defines.h"
.file	6	"/home/paperspace/cudax/cuda/include/builtin_types.h"
.file	7	"/home/paperspace/cudax/cuda/include/device_types.h"
.file	8	"/home/paperspace/cudax/cuda/include/driver_types.h"
.file	9	"/home/paperspace/cudax/cuda/include/surface_types.h"
.file	10	"/home/paperspace/cudax/cuda/include/texture_types.h"
.file	11	"/home/paperspace/cudax/cuda/include/vector_types.h"
.file	12	"/home/paperspace/cudax/cuda/include/device_launch_parameters.h"
.file	13	"/home/paperspace/cudax/cuda/include/crt/storage_class.h"
.file	14	"asyncAPI.cu"
.file	15	"/home/paperspace/cudax/cuda/include/common_functions.h"
.file	16	"/home/paperspace/cudax/cuda/include/math_functions.h"
.file	17	"/home/paperspace/cudax/cuda/include/math_constants.h"
.file	18	"/home/paperspace/cudax/cuda/include/device_functions.h"
.file	19	"/home/paperspace/cudax/cuda/include/sm_11_atomic_functions.h"
.file	20	"/home/paperspace/cudax/cuda/include/sm_12_atomic_functions.h"
.file	21	"/home/paperspace/cudax/cuda/include/sm_13_double_functions.h"
.file	22	"/home/paperspace/cudax/cuda/include/sm_20_atomic_functions.h"
.file	23	"/home/paperspace/cudax/cuda/include/sm_32_atomic_functions.h"
.file	24	"/home/paperspace/cudax/cuda/include/sm_35_atomic_functions.h"
.file	25	"/home/paperspace/cudax/cuda/include/sm_20_intrinsics.h"
.file	26	"/home/paperspace/cudax/cuda/include/sm_30_intrinsics.h"
.file	27	"/home/paperspace/cudax/cuda/include/sm_32_intrinsics.h"
.file	28	"/home/paperspace/cudax/cuda/include/sm_35_intrinsics.h"
.file	29	"/home/paperspace/cudax/cuda/include/surface_functions.h"
.file	30	"/home/paperspace/cudax/cuda/include/texture_fetch_functions.h"
.file	31	"/home/paperspace/cudax/cuda/include/texture_indirect_functions.h"
.file	32	"/home/paperspace/cudax/cuda/include/surface_indirect_functions.h"
.file	33	"/home/paperspace/cudax/cuda/include/math_functions_dbl_ptx1.h"


.entry _Z16increment_kernelPii (
.param .u64 __cudaparm__Z16increment_kernelPii_g_data,
.param .s32 __cudaparm__Z16increment_kernelPii_inc_value)
{
.reg .u16 %rh<4>;
.reg .u32 %r<8>;
.reg .u64 %rd<6>;
.loc	14	165	0
$LDWbegin__Z16increment_kernelPii:
.loc	14	168	0
ld.param.u64 %rd1, [__cudaparm__Z16increment_kernelPii_g_data];
cvt.u32.u16 %r1, %tid.x;
mov.u16 %rh1, %ctaid.x;
mov.u16 %rh2, %ntid.x;
mul.wide.u16 %r2, %rh1, %rh2;
add.u32 %r3, %r1, %r2;
cvt.s64.s32 %rd2, %r3;
mul.wide.s32 %rd3, %r3, 4;
add.u64 %rd4, %rd1, %rd3;
ld.global.s32 %r4, [%rd4+0];
ld.param.s32 %r5, [__cudaparm__Z16increment_kernelPii_inc_value];
add.s32 %r6, %r4, %r5;
st.global.s32 [%rd4+0], %r6;
.loc	14	169	0
exit;
$LDWend__Z16increment_kernelPii:
} 
	.global .align 8 .b8 _ZTV18StopWatchInterface[72] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
.global .align 8 .b8 _ZTV14StopWatchLinux[72] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};


Fatbin elf code:
================
arch = sm_20
code version = [1,7]
producer = cuda
host = linux
compile_size = 64bit
identifier = asyncAPI.cu

Fatbin ptx code:
================
arch = sm_20
code version = [4,0]
producer = cuda
host = linux
compile_size = 64bit
compressed
identifier = asyncAPI.cu






.version 4.0
.target sm_20
.address_size 64

.global .align 8 .b8 _ZTV18StopWatchInterface[72];
.global .align 8 .b8 _ZTV14StopWatchLinux[72];

.visible .entry _Z16increment_kernelPii(
.param .u64 _Z16increment_kernelPii_param_0,
.param .u32 _Z16increment_kernelPii_param_1
)
{
.reg .s32 %r<8>;
.reg .s64 %rd<5>;


ld.param.u64 %rd1, [_Z16increment_kernelPii_param_0];
ld.param.u32 %r1, [_Z16increment_kernelPii_param_1];
cvta.to.global.u64 %rd2, %rd1;
mov.u32 %r2, %ctaid.x;
mov.u32 %r3, %ntid.x;
mov.u32 %r4, %tid.x;
mad.lo.s32 %r5, %r3, %r2, %r4;
mul.wide.s32 %rd3, %r5, 4;
add.s64 %rd4, %rd2, %rd3;
ld.global.u32 %r6, [%rd4];
add.s32 %r7, %r6, %r1;
st.global.u32 [%rd4], %r7;
ret;
}



Fatbin elf code:
================
arch = sm_30
code version = [1,7]
producer = cuda
host = linux
compile_size = 64bit
identifier = asyncAPI.cu

Fatbin ptx code:
================
arch = sm_30
code version = [4,0]
producer = cuda
host = linux
compile_size = 64bit
compressed
identifier = asyncAPI.cu






.version 4.0
.target sm_30
.address_size 64

.global .align 8 .b8 _ZTV18StopWatchInterface[72];
.global .align 8 .b8 _ZTV14StopWatchLinux[72];

.visible .entry _Z16increment_kernelPii(
.param .u64 _Z16increment_kernelPii_param_0,
.param .u32 _Z16increment_kernelPii_param_1
)
{
.reg .s32 %r<8>;
.reg .s64 %rd<5>;


ld.param.u64 %rd1, [_Z16increment_kernelPii_param_0];
ld.param.u32 %r1, [_Z16increment_kernelPii_param_1];
cvta.to.global.u64 %rd2, %rd1;
mov.u32 %r2, %ctaid.x;
mov.u32 %r3, %ntid.x;
mov.u32 %r4, %tid.x;
mad.lo.s32 %r5, %r3, %r2, %r4;
mul.wide.s32 %rd3, %r5, 4;
add.s64 %rd4, %rd2, %rd3;
ld.global.u32 %r6, [%rd4];
add.s32 %r7, %r6, %r1;
st.global.u32 [%rd4], %r7;
ret;
}


